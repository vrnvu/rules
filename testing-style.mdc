---
description: Testing Style Rules 
globs:
alwaysApply: true
---

# Testing Style Rules

## Core Principles

### Test Public API Only
- Test functions users actually call
- Test complete user workflows
- Test observable behavior, not implementation details

### Avoid Unit Testing
- Don't test individual functions in isolation
- Don't test internal functions
- Don't use mock objects

## Parallelization Rules

- Assume database is dirty
- Assume other tests are running
- Use unique test data for each test
- Never clean up after tests
- Don't rely on shared state

## Test Organization

- Write integration tests
- Write E2E tests
- Use check functions for API encapsulation
- A check function has the form assert(got, want), or assert(input, output)
- Use data-driven tests with input/output pairs
- Keep tests fast and parallelizable, always paralellize tests

## Anti-Patterns

- Unit testing
- Testing internal functions
- Database cleanup
- Clean state assumptions
- Use mocks
- Testing implementation details
- Slow test suites
- Flaky tests
- Tight coupling to implementation